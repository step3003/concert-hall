review:
  image: gitlab.websecret.by:5555/websecret/kube-deployer:latest
  stage: review
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME.$CD_BASE_DOMAIN
    on_stop: stop_review
  rules:
  - if: '$CI_COMMIT_BRANCH =~ /^release/ || $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "main"'
  - if: '$CI_COMMIT_BRANCH =~ /^feature/'
    when: manual
  script:
  - deploy
stop_review:
  image: gitlab.websecret.by:5555/websecret/kube-deployer:latest
  stage: cleanup
  variables:
    GIT_STRATEGY: none
  script:
  - delete
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  when: manual
  allow_failure: true

#deploy_to_prod:
#  image: gitlab.websecret.by:5555/websecret/ssh-deployer:latest
#  stage: prod
#  variables:
#    # Server IP
#    SSH_SERVER: 1.1.1.1
#    GIT_STRATEGY: none
#  script:
#    - cd /app
#    - docker image prune -a --force
#    - VERSION=$CI_COMMIT_SHA docker-compose pull
#    - VERSION=$CI_COMMIT_SHA docker-compose up -d --remove-orphans
#    - docker-compose exec -T back php artisan migrate --force
#  when: manual
#  only:
#    refs:
#      - branches
#      - tags

.deploy_helpers: &deploy_helpers |
  export DATABASE_URL=${DATABASE_URL-$auto_database_url}
  
  function deploy_name() {
    name="$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_NAME"
    track="${1-stable}"
  
    if [[ "$track" != "stable" ]]; then
      name="$name-$track"
    fi
  
    echo $name
  }
  
  function deploy() {
    export KUBECONFIG="$KUBECFG"
  
    mv build/chart chart
  
    track="${1-stable}"
    percentage="${2:-100}"
    name=$(deploy_name "$track")
  
    if [[ -z "$CI_COMMIT_TAG" ]]; then
      image_repository=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE}
      image_tag=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
    else
      image_repository=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE}
      image_tag=${CI_APPLICATION_TAG:-$CI_COMMIT_TAG}
    fi
  
    secret_name="gitlab-registry-$CI_PROJECT_NAME"
  
    kubectl create secret docker-registry $secret_name \
      --docker-server=$CI_REGISTRY \
      --docker-username=$CI_DEPLOY_USER \
      --docker-password=$CI_DEPLOY_PASSWORD \
      -n "$KUBE_NAMESPACE" \
      --dry-run=client -o yaml | kubectl apply -f -
  
    service_enabled="true"
    postgres_enabled="$POSTGRES_ENABLED"
  
    helm upgrade --install \
      --wait \
      --set image.repository="$image_repository" \
      --set image.tag=$CI_COMMIT_SHA \
      --set image.secretName=$secret_name \
      --set service.commonName="le-$CI_PROJECT_ID.$KUBE_INGRESS_BASE_DOMAIN" \
      --set service.url="$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_NAME.$CD_BASE_DOMAIN" \
      --set application.migrateCommand="$DB_MIGRATE" \
      --set application.laravel.env="local" \
      --set application.laravel.debug="true" \
      --set application.db.host="general-postgresql" \
      --set application.redis.volumeSuffix="$CI_PROJECT_ID-$CI_COMMIT_REF_NAME-persistent-volume" \
      --namespace="$KUBE_NAMESPACE" \
      "$name" \
      chart/
  }
  
  function delete() {
    export KUBECONFIG="$KUBECFG"
  
    name="$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_NAME"
  
    helm uninstall "$name"
  }

before_script:
- *deploy_helpers