apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "trackableappname" . }}
  labels:
    app: {{ template "appname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    checksum/config: {{ include (print $.Template.BasePath "/env-configmap.yaml") . | sha256sum | substr 0 30 }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {{ template "appname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "appname" . }}
        release: {{ .Release.Name }}
    spec:
      volumes:
      - name: cache
        persistentVolumeClaim:
          claimName: redis-{{.Values.application.redis.volumeSuffix}}
      imagePullSecrets:
      - name: {{ .Values.image.secretName }}
      initContainers:
      - name: migrate
        image: "{{ .Values.image.repository }}/back:{{ .Values.image.tag }}"
        command: ['php', 'artisan', 'migrate', '--force']
        envFrom: &back_env
        - configMapRef:
            name: {{ template "trackableappname" . }}-env
      containers:
      - name: back
        image: "{{ .Values.image.repository }}/back:{{ .Values.image.tag }}"
        envFrom: *back_env
        resources:
          limits:
            memory: "256Mi"
          requests:
            memory: "64Mi"
        ports:
        - name: "{{ .Values.service.name }}"
          containerPort: 9000
      - name: nginx
        image: "{{ .Values.image.repository }}/nginx:{{ .Values.image.tag }}"
        env:
        - name: BACK_HOST
          value: 127.0.0.1:9000
        ports:
        - name: "{{ .Values.service.name }}"
          containerPort: 80
        resources:
          requests:
            memory: "10Mi"
      - name: redis
        image: redis:6.2.6-alpine
        command: ["redis-server",  "--appendonly", "yes"]
        resources:
          limits:
            memory: "256Mi"
          requests:
            memory: "32Mi"
        ports:
        - containerPort: 6379
        volumeMounts:
        - mountPath: /data
          name: cache
      - name: queue
        image: "{{ .Values.image.repository }}/back:{{ .Values.image.tag }}"
        command: ["php", "artisan", "queue:work", "--tries=3"]
        envFrom: *back_env
        resources:
          limits:
            memory: "256Mi"
          requests:
            memory: "64Mi"